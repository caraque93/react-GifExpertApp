{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACQ,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAC,OAAMP,GAAN,mBAAqBO,OACrCN,EAAc,MAMd,SAEI,uBACIO,KAAK,OACLC,MAAST,EACTU,SArBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,gDAEmCC,UAAUH,GAF7C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAQD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAgBZM,GAhBY,4CAAH,sDCEPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAItC,OACI,sBAAKc,UAAU,0CAAf,UACK,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCLLO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GAAI,OACPH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAAEpB,IAEEqB,EDbwBK,CAAc1B,GAAtCoB,EAH8B,EAG9BA,QAAcP,EAHgB,EAGrBN,KAEhB,OACI,qCAEI,mCAAOP,EAAP,OACEoB,GAAW,0CACb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEqBvBgB,EAlCM,WAAO,IAAD,EAGazC,mBAAS,CAAC,WAHvB,mBAGhB0C,EAHgB,KAGJ3C,EAHI,KAWvB,OAEI,qCACI,8CACA,uBACA,cAAC,EAAD,CACIA,cAAeA,IAGrB,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACvB,cAAC,EAAD,CAEAA,SAAWA,GADLA,Y,MCxBzB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8f044303.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value); \r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n\r\n            setCategories( c => [ inputValue, ...c] );\r\n            setInputValue('');\r\n        }\r\n        }\r\n    \r\n\r\n    return (\r\n            <form onSubmit={ handleSubmit } >\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    value= { inputValue }\r\n                    onChange= { handleInputChange}\r\n                />   \r\n            </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)  }&limit=10&api_key=ZRjH9FzoMmhZhV3LTDl2IT520Uz2hwfp`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs =  data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    } )\r\n\r\n    \r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n    \r\n    // console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn \">\r\n             <img src={ url } alt={ title } />\r\n             <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { /* useState, useEffect */ } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    \r\n    const {loading, data:images} = useFetchGifs( category );\r\n    \r\n    return (\r\n        <>\r\n        \r\n            <h3> { category } </h3>\r\n            { loading && <p>Cargando </p>}\r\n            <div className=\"card-grid\"> \r\n                {\r\n                    images.map( img => \r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img } \r\n                        />  \r\n                    )\r\n                }            \r\n            </ div>\r\n        </>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/GetGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs =>                 \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            );\r\n    }, [ category ] );\r\n\r\n    return state; \r\n\r\n}","import { useState } from \"react\"\r\nimport React from 'react'\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    \r\n    const [categories, setCategories] = useState(['Fender']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     setCategories( [...categories, 'Epiphone'])\r\n    //     console.log('categories', categories)\r\n    // }\r\n\r\n    //handleAdd('Epiphone');\r\n    return (\r\n\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />  \r\n            <AddCategory  \r\n                setCategories={setCategories}\r\n            />\r\n\r\n          <ol>\r\n              {\r\n                  categories.map( category => \r\n                   <GifGrid \r\n                   key={ category }\r\n                   category={ category } />\r\n                  )\r\n              }\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}